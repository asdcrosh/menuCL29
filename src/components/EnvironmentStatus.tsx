import React, { useState, useEffect } from 'react';
import './EnvironmentStatus.css';

interface EnvironmentStatusProps {
  isVisible?: boolean;
}

const EnvironmentStatus: React.FC<EnvironmentStatusProps> = ({ isVisible = false }) => {
  const [envStatus, setEnvStatus] = useState({
    supabaseUrl: !!process.env.REACT_APP_SUPABASE_URL,
    supabaseKey: !!process.env.REACT_APP_SUPABASE_ANON_KEY,
  });

  useEffect(() => {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    setEnvStatus({
      supabaseUrl: !!process.env.REACT_APP_SUPABASE_URL,
      supabaseKey: !!process.env.REACT_APP_SUPABASE_ANON_KEY,
    });
  }, []);

  if (!isVisible) return null;

  const allConfigured = envStatus.supabaseUrl && envStatus.supabaseKey;
  const source = process.env.NODE_ENV === 'production' ? 'GitHub Secrets' : '.env.local';

  return (
    <div className="environment-status">
      <div className="status-header">
        <h4>üîç –°—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è</h4>
        <span className={`status-indicator ${allConfigured ? 'success' : 'warning'}`}>
          {allConfigured ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ' : '‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ'}
        </span>
      </div>
      
      <div className="status-details">
        <div className="status-item">
          <span>REACT_APP_SUPABASE_URL:</span>
          <span className={envStatus.supabaseUrl ? 'success' : 'error'}>
            {envStatus.supabaseUrl ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
          </span>
        </div>
        
        <div className="status-item">
          <span>REACT_APP_SUPABASE_ANON_KEY:</span>
          <span className={envStatus.supabaseKey ? 'success' : 'error'}>
            {envStatus.supabaseKey ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
          </span>
        </div>
        
        <div className="status-item">
          <span>–ò—Å—Ç–æ—á–Ω–∏–∫:</span>
          <span className="info">{source}</span>
        </div>
      </div>

      {allConfigured && (
        <div className="status-message success">
          üéâ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å Supabase.
        </div>
      )}
      
      {!allConfigured && (
        <div className="status-message warning">
          ‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
        </div>
      )}
    </div>
  );
};

export default EnvironmentStatus;
