const express = require('express');
const cors = require('cors');
const fs = require('fs').promises;
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3001;
const DATA_FILE = path.join(__dirname, 'data', 'menu-db.json');

// Middleware
app.use(cors());
app.use(express.json());

// ะกะพะทะดะฐะตะผ ะฟะฐะฟะบั data ะตัะปะธ ะตั ะฝะตั
async function ensureDataDirectory() {
  try {
    await fs.mkdir(path.join(__dirname, 'data'), { recursive: true });
  } catch (error) {
    console.log('ะะฐะฟะบะฐ data ัะถะต ัััะตััะฒัะตั');
  }
}

// ะะฐะณััะถะฐะตะผ ะดะฐะฝะฝัะต ะธะท ัะฐะนะปะฐ
async function loadData() {
  try {
    const data = await fs.readFile(DATA_FILE, 'utf8');
    return JSON.parse(data);
  } catch (error) {
    // ะัะปะธ ัะฐะนะป ะฝะต ัััะตััะฒัะตั, ัะพะทะดะฐะตะผ ั ะฝะฐัะฐะปัะฝัะผะธ ะดะฐะฝะฝัะผะธ
    const initialData = {
      restaurant: {
        name: "COFFEE LIKE",
        description: "ะะพะฑัะพ ะฟะพะถะฐะปะพะฒะฐัั ะฒ ะฝะฐัั ัััะฝัั ะบะพัะตะนะฝั! ะั ะฟัะตะดะปะฐะณะฐะตะผ ัะฒะตะถะธะน ะบะพัะต, ะฒะบััะฝัะต ะฑะปัะดะฐ ะธ ะฟัะธััะฝัั ะฐัะผะพััะตัั."
      },
      categories: [
        {
          id: "drinks",
          name: "ะะฐะฟะธัะบะธ",
          icon: "โ",
          subCategories: [
            {
              id: "classic-drinks",
              name: "ะะปะฐััะธัะตัะบะธะต ะฝะฐะฟะธัะบะธ",
              categoryId: "drinks",
              items: [
                {
                  id: "americano",
                  name: "ะะผะตัะธะบะฐะฝะพ",
                  description: "ะะปะฐััะธัะตัะบะธะน ััะฟัะตััะพ ั ะณะพัััะตะน ะฒะพะดะพะน",
                  price: 150,
                  category: "drinks",
                  subCategory: "classic-drinks",
                  available: true
                },
                {
                  id: "cappuccino",
                  name: "ะะฐะฟััะธะฝะพ",
                  description: "ะญัะฟัะตััะพ ั ะผะพะปะพัะฝะพะน ะฟะตะฝะบะพะน",
                  price: 180,
                  category: "drinks",
                  subCategory: "classic-drinks",
                  available: true
                }
              ]
            }
          ]
        }
      ]
    };
    
    await saveData(initialData);
    return initialData;
  }
}

// ะกะพััะฐะฝัะตะผ ะดะฐะฝะฝัะต ะฒ ัะฐะนะป
async function saveData(data) {
  await fs.writeFile(DATA_FILE, JSON.stringify(data, null, 2), 'utf8');
}

// API Routes

// GET /api/menu - ะฟะพะปััะธัั ะฒัะต ะดะฐะฝะฝัะต ะผะตะฝั
app.get('/api/menu', async (req, res) => {
  try {
    const data = await loadData();
    res.json(data);
  } catch (error) {
    console.error('ะัะธะฑะบะฐ ะฟัะธ ะทะฐะณััะทะบะต ะดะฐะฝะฝัั:', error);
    res.status(500).json({ error: 'ะัะธะฑะบะฐ ัะตัะฒะตัะฐ' });
  }
});

// PUT /api/menu - ะพะฑะฝะพะฒะธัั ะฒัะต ะดะฐะฝะฝัะต ะผะตะฝั
app.put('/api/menu', async (req, res) => {
  try {
    const newData = req.body;
    await saveData(newData);
    res.json({ success: true, message: 'ะะฐะฝะฝัะต ััะฟะตัะฝะพ ัะพััะฐะฝะตะฝั' });
  } catch (error) {
    console.error('ะัะธะฑะบะฐ ะฟัะธ ัะพััะฐะฝะตะฝะธะธ ะดะฐะฝะฝัั:', error);
    res.status(500).json({ error: 'ะัะธะฑะบะฐ ัะตัะฒะตัะฐ' });
  }
});

// GET /api/menu/reset - ัะฑัะพัะธัั ะบ ะธััะพะดะฝัะผ ะดะฐะฝะฝัะผ
app.get('/api/menu/reset', async (req, res) => {
  try {
    const initialData = {
      restaurant: {
        name: "COFFEE LIKE",
        description: "ะะพะฑัะพ ะฟะพะถะฐะปะพะฒะฐัั ะฒ ะฝะฐัั ัััะฝัั ะบะพัะตะนะฝั! ะั ะฟัะตะดะปะฐะณะฐะตะผ ัะฒะตะถะธะน ะบะพัะต, ะฒะบััะฝัะต ะฑะปัะดะฐ ะธ ะฟัะธััะฝัั ะฐัะผะพััะตัั."
      },
      categories: [
        {
          id: "drinks",
          name: "ะะฐะฟะธัะบะธ",
          icon: "โ",
          subCategories: [
            {
              id: "classic-drinks",
              name: "ะะปะฐััะธัะตัะบะธะต ะฝะฐะฟะธัะบะธ",
              categoryId: "drinks",
              items: [
                {
                  id: "americano",
                  name: "ะะผะตัะธะบะฐะฝะพ",
                  description: "ะะปะฐััะธัะตัะบะธะน ััะฟัะตััะพ ั ะณะพัััะตะน ะฒะพะดะพะน",
                  price: 150,
                  category: "drinks",
                  subCategory: "classic-drinks",
                  available: true
                },
                {
                  id: "cappuccino",
                  name: "ะะฐะฟััะธะฝะพ",
                  description: "ะญัะฟัะตััะพ ั ะผะพะปะพัะฝะพะน ะฟะตะฝะบะพะน",
                  price: 180,
                  category: "drinks",
                  subCategory: "classic-drinks",
                  available: true
                }
              ]
            }
          ]
        }
      ]
    };
    
    await saveData(initialData);
    res.json({ success: true, message: 'ะะฐะฝะฝัะต ัะฑัะพัะตะฝั ะบ ะธััะพะดะฝะพะผั ัะพััะพัะฝะธั' });
  } catch (error) {
    console.error('ะัะธะฑะบะฐ ะฟัะธ ัะฑัะพัะต ะดะฐะฝะฝัั:', error);
    res.status(500).json({ error: 'ะัะธะฑะบะฐ ัะตัะฒะตัะฐ' });
  }
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
async function startServer() {
  await ensureDataDirectory();
  
  app.listen(PORT, () => {
    console.log(`๐ API ัะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั ${PORT}`);
    console.log(`๐ ะะฐะฝะฝัะต ัะพััะฐะฝััััั ะฒ: ${DATA_FILE}`);
    console.log(`๐ API ะดะพัััะฟะตะฝ ะฟะพ ะฐะดัะตัั: http://localhost:${PORT}/api/menu`);
  });
}

startServer().catch(console.error);
